{"version":3,"sources":["components/layout/SignedInLink.js","store/actions/authAction.js","components/layout/SingedOutLink.js","components/layout/Navbar.js","components/dashboard/Notification.js","config/fbConfig.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetail.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","Fragment","react_router_dom","to","onClick","className","profile","initials","SignedOutLinks","state","firebase","link","uid","SignedInLink","SingedOutLink","Notification","notifications","map","item","user","content","moment","time","toDate","fromNow","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","ProjectSummary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","imageURL","getImage","project","imageTitle","_this2","console","log","storage","ref","child","concat","getDownloadURL","url","setState","catch","error","title","src","alt","authorFirstName","authorLastName","creatAt","calendar","React","Component","ProjectList","_ref","projects","id","key","projects_ProjectSummary","Dashboard","_this$props","projects_ProjectList","dashboard_Notification","react_router","compose","ordered","firestoreConnect","collection","orderBy","ProjectDetails","ownProps","match","params","data","SignIn","email","password","handleSubmit","e","preventDefault","signIn","handleChange","defineProperty","target","value","authError","onSubmit","htmlFor","onChange","crediential","credentials","signInWithEmailAndPassword","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorID","add","objectSpread","Date","App","layout_Navbar","exact","path","component","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","alert","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","rootRedcuer","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a122e147.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authAction\";\r\n\r\nconst SignedInLinks = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/create\">NEW PROJECT</Link>\r\n        </li>\r\n        <li>\r\n          <a onClick={props.signOut}>LOG OUT(登出)</a>\r\n        </li>\r\n        <li className=\"welcome\">Hello, {props.profile.initials}</li>\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase\r\n          .auth()\r\n          .signInWithEmailAndPassword(credentials.email, credentials.password).then(()=>{\r\n              dispatch({\r\n                  type:'LOGIN_SUCCESS'\r\n              })\r\n          }).catch((err)=>{\r\n              dispatch({\r\n                  type: 'LOGIN_FAILED',\r\n                  err\r\n              })\r\n          })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({\r\n                type: 'SIGNOUT_SUCCESS',\r\n            });\r\n        })\r\n    };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        console.log(\"newUser\", newUser);\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase\r\n          .auth()\r\n          .createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n          ).then((resp) => {\r\n              return firestore.collection('users').doc(resp.user.uid).set({\r\n                  firstName:newUser.firstName,\r\n                  lastName: newUser.lastName,\r\n                  initials: newUser.firstName[0] + newUser.lastName[0]\r\n              })\r\n          }).then(()=>{\r\n              dispatch({type:'SIGNUP_SUCCESS'})\r\n          }).catch((err)=>{\r\n              dispatch({ type: 'SIGNUP_ERROR', err })\r\n          })\r\n    }\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/signin\">\r\n        <span>SIGN IN(登入)</span>\r\n      </Link>\r\n      <Link to=\"/signup\">\r\n        <span>LOGIN IN(註冊)</span>\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLink\";\r\nimport SignedOutLinks from './SingedOutLink';\r\nimport \"../../index\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  const link = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />;\r\n  return (\r\n    <div className=\"navbar\">\r\n      <Link to=\"/\">\r\n        <span>MARIO PLAN</span>\r\n      </Link>\r\n      { link }\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\n\r\nconst Notification = props => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"Notification\">\r\n      <h2>NOTIFICATION BOARD</h2>\r\n      <ul>\r\n      { notifications && notifications.map((item)=>{\r\n        return (\r\n          <li className=\"notification_list\">\r\n          <span className=\"username\">{item.user} </span>\r\n          <span className=\"action\">{item.content} </span>\r\n          <span className=\"action_time\">{moment(item.time.toDate()).fromNow()}</span>\r\n          </li>\r\n        )\r\n      })}      \r\n      </ul>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAtrLOman4GVOjz5kFZGlkr1wMw8YuGRHY\",\r\n  authDomain: \"my-super-firebase.firebaseapp.com\",\r\n  databaseURL: \"https://my-super-firebase.firebaseio.com\",\r\n  projectId: \"my-super-firebase\",\r\n  storageBucket: \"my-super-firebase.appspot.com\",\r\n  messagingSenderId: \"1061675030294\",\r\n  appId: \"1:1061675030294:web:230c83bcf8885670\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nvar storage = firebase.firestore();\r\n\r\nexport { storage, firebase as default}","import React from \"react\";\r\nimport \"../../index\";\r\nimport moment from \"moment\";\r\nimport \"../../config/fbConfig\";\r\nimport firebase from \"firebase/app\";\r\n\r\nclass ProjectSummary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      imageURL: ''\r\n    }\r\n    this.getImage(this.props.project.imageTitle);\r\n  }\r\n\r\n  getImage(imageTitle) {\r\n    console.log(\"getImage works in project summary\");\r\n    var storage = firebase.storage();\r\n    var storageRef = storage.ref();\r\n    storageRef\r\n      .child(`${imageTitle}.jpg`)\r\n      .getDownloadURL()\r\n      .then(url => {\r\n        console.log(\"url\", url);\r\n        this.setState({\r\n          imageURL: url\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(\"error\", error);\r\n      });\r\n  }\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"project_summary\">\r\n        <div className=\"project_title\">{project.title}</div>\r\n        <p className=\"project_name\">{project.content}</p>\r\n        <div className=\"pic\">\r\n          <img src={this.state.imageURL} alt=\"pic\"/>\r\n        </div>\r\n        <div className=\"postPerson\">\r\n          psot by: {project.authorFirstName} {project.authorLastName}\r\n        </div>\r\n        <p className=\"post_time\">\r\n          {moment(project.creatAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectSummary;\r\n","import React, { Component } from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"ProjectList\">\r\n      {projects &&\r\n        projects.map((project) => (\r\n          <Link to={\"/project/\" + project.id} key={project.id}>\r\n            <ProjectSummary project={project}  />\r\n          </Link>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport Notification from \"./Notification\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"Dashboard\">\r\n        <ProjectList projects={projects} />\r\n        <Notification notifications={notifications} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToPros = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToPros),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"creatAt\", \"desc\"] },\r\n    { collection: \"notifications\", orderBy: [\"time\", \"desc\"] }\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport \"../../index\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../../config/fbConfig\";\r\nimport firebase from \"firebase/app\";\r\n\r\nclass ProjectDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      imageURL: \"\"\r\n    };\r\n  }\r\n  componentDidMount(){\r\n    this.getImage(this.props.project.imageTitle);\r\n  }\r\n  getImage(imageTitle) {\r\n    console.log(\"getImage works work in project detail\");\r\n    var storage = firebase.storage();\r\n    var storageRef = storage.ref();\r\n    storageRef\r\n      .child(`${imageTitle}.jpg`)\r\n      .getDownloadURL()\r\n      .then(url => {\r\n        console.log(url)\r\n        this.setState({\r\n          imageURL: url\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { project, auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    if (project) {\r\n      return (\r\n        <div className=\"ProjectDetails\">\r\n          <span className=\"project_id\">\r\n            your project id : {project.title}\r\n          </span>\r\n          <div className='pic'>\r\n            <img src={this.state.imageURL} />\r\n          </div>\r\n          <div className=\"posted_by\">{project.content}</div>\r\n          <div className=\"postPerson\">\r\n            psot by: {project.authorFirstName} {project.authorLastName}\r\n          </div>\r\n          <div className=\"post_time\">\r\n            {moment(project.creatAt.toDate()).calendar()}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <p>loading...</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  console.log(\"project\", project);\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../index\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authAction\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid)  return <Redirect to='/' />;\r\n      return (\r\n        <div className=\"SignIn\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <h5>SIGN IN YOUR EMAIL AND PASSWORD FOR SIGN IN</h5>\r\n            <label htmlFor=\"email\">email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n            <div>\r\n              <button>login in</button>\r\n              <div>{authError ? <p>{authError}</p> : null}</div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: crediential => {\r\n      dispatch(signIn(crediential));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from \"../../store/actions/authAction\";\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\"\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h5>LOGIN IN(註冊</h5>\r\n          <label htmlFor=\"email\">email</label>\r\n          <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          <label htmlFor=\"password\">password</label>\r\n          <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          <label htmlFor=\"firstName\">first name</label>\r\n          <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          <label htmlFor=\"lastName\">lastname</label>\r\n          <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          {authError ? <div className=\"authError\">{authError}</div> : null}\r\n          <div>\r\n            <button>login in</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: (newUser)=>{dispatch(signUp(newUser))}\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp); \r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: \"\",\r\n        content : \"\",\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n    };\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h5>CREATE MY PROJECT</h5>\r\n                    <label htmlFor=\"title\">title</label>\r\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    <label htmlFor=\"content\">Project content</label>\r\n                    <textarea id=\"content\" onChange={this.handleChange}></textarea>\r\n                    <div>\r\n                        <button>submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToPros = state => {\r\n    return {\r\n      auth: state.firebase.auth\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  };\r\n};\r\n\r\n//store.dispatch\r\n\r\nexport default connect(mapStateToPros, mapDispatchToProps)(CreateProject);\r\n\r\n\r\n//dispatch is a function of the Redux store\r\n// to dispatch an action.This is the only way to trigger a state change.\r\n//mapDispatchToProps lets you create functions that dispatch when called, and pass those functions as props to your component.\r\n","export const createProject = project => (dispatch, getState,{ getFirestore, getFirebase } ) => {\r\n  const firestore = getFirestore();\r\n  const profile = getState().firebase.profile;\r\n  const authorID = getState().firebase.auth.uid;\r\n    console.log(1, getState().firebase)\r\n  firestore.collection(\"projects\").add({\r\n    ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorID: authorID,\r\n    creatAt: new Date()\r\n  }).then(()=>{\r\n      dispatch({\r\n          type: \"CREATE_PROJECT\",\r\n          project\r\n      });\r\n  }).catch((err) => {\r\n      dispatch({\r\n          type: \"CREATE_PROJECT_ERR\",\r\n          err\r\n      });\r\n  })\r\n};\r\n\r\n// export const createProject = (project) => (\r\n//     {\r\n//         type: 'ADD_PROJECT',\r\n//         project: 'PROJECT'\r\n//     }\r\n// );\r\n\r\n// A store is not a class.It's just an object with a few methods on it.\r\n//To create it, pass your root reducing function to createStore.\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport ProjectDetails from './components/projects/ProjectDetail';\r\nimport SignIn from './components/auth/SignIn';\r\nimport SignUp from './components/auth/SignUp';\r\nimport CreateProject from './components/projects/CreateProject';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Navbar/>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n            <Route path=\"/project/:id\" component={ProjectDetails} />\r\n            <Route path=\"/signin\" component={SignIn} />\r\n            <Route path=\"/signup\" component={SignUp} />\r\n            <Route path=\"/create\" component={CreateProject} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n  authError: null\r\n};\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_FAILED\":\r\n      alert(\"LOGIN_FAILED\");\r\n      return {\r\n        ...state,\r\n        authError: \"LOGIN_FAILED\"\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      alert(\"LOGIN_SUCCESS\");\r\n      return {\r\n        ...state,\r\n        authError: \"LOGIN_SUCCESS\"\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      alert(\"登出成功\");\r\n      return {\r\n        state\r\n      };\r\n    case \"SIGNUP_SUCCESS\":\r\n      alert(\"註冊成功 SIGNUP_SUCCESS\");\r\n      return {\r\n        ...state, \r\n        authError: null\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      alert(\"註冊失敗 SIGNUP_ERROR\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    {\r\n      id: \"1\",\r\n      title: \"Alibaba gives new titles to many SCMP staff\",\r\n      content:\r\n        \"further cost-cutting measures. The paper cut bonuses last year after the company built a ...\"\r\n    },\r\n    {\r\n      id: \"2\",\r\n      title:\r\n        \"Kate Middleton new title: What does Dame Grand Cross of the Royal ...\",\r\n      content:\r\n        \"Platinum Games teases two new wholly-owned IPs, new title that “has never been done before\"\r\n    },\r\n    {\r\n      id: \"3\",\r\n      title: \"Platinum Games teases two new wholly-owned IPs, new title that \",\r\n      content:\r\n        \"Amy Poehler recruits a cast of SNL powerhouses—including Tina Fey, Maya Rudolph and Ana Gasteyer—for her Bridesmaids-esq\"\r\n    }\r\n  ]\r\n};\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"CREATE_PROJECT\", action.project);\r\n      return state\r\n    case \"CREATE_PROJECT_ERR\":\r\n      console.log(\"CREATE_PROJECT_ERR\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from './authReducer';\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootRedcuer from \"./store/reducers/rootReducer\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\"; // redux-thunk is a middleware\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\r\nimport fbConfig from \"./config/fbConfig\";\r\n\r\nconst store = createStore(\r\n  rootRedcuer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\r\n    reduxFirestore(fbConfig),\r\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile:'users', attachAuthIsReady: true})\r\n  )\r\n);\r\n\r\nstore.firebaseAuthIsReady.then(()=>{\r\n  ReactDOM.render(\r\n    <Provider store={store}><App /></Provider>, document.getElementById(\"root\"));\r\n  serviceWorker.unregister();\r\n});\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n//createStore(reducer, [preloadedState], [enhancer])\r\n//reducer(Function): A reducing function that returns the next state tree, given the current state tree and an action to handle.\r\n//[preloadedState](any): The initial state.You may optionally specify it to hydrate the state from the server in universal apps, or to restore a previously serialized user session.If you produced reducer with combineReducers, this must be a plain object with the same shape as the keys passed to it.Otherwise, you are free to pass anything that your reducer can understand.\r\n//[enhancer](Function): The store enhancer.You may optionally specify it to enhance the store with third - party capabilities such as middleware, time travel, persistence, etc.The only store enhancer that ships with Redux is applyMiddleware().\r\n"],"sourceRoot":""}